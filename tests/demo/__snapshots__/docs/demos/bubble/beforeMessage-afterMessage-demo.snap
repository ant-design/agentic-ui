<DocumentFragment>
  <div
    class="ant-app"
  >
    <div>
      test
    </div>
    <div
      style="border-radius: var(--radius-modal-base); background: var(color-gray-bg-page-light); box-shadow: var(--shadow-control-base); width: min(830px,100%); display: flex; flex-direction: column; justify-content: space-between; padding: 0px; z-index: 0; margin: 24px auto;"
    >
      <div
        style="padding: 16px; display: flex; flex-direction: row; align-items: center; box-sizing: border-box; border-width: 0px 0px 1px 0px; border-style: solid; border-color: rgba(0, 16, 32, 0.063);"
      >
        <span
          style="font-size: 13px; color: rgba(0, 0, 0, 0.45);"
        >
          📝 beforeMessageRender 和 afterMessageRender 渲染演示
        </span>
        <div
          style="font-size: 12px; color: rgba(0, 0, 0, 0.45);"
        >
          这个演示展示了如何使用 beforeMessageRender 和 afterMessageRender 在消息内容的前后添加自定义内容
        </div>
      </div>
      <div>
        <div
          style="padding: 24px;"
        >
          <div
            bubblerenderconfig="[object Object]"
            data-testid="bubble"
            origindata="[object Object]"
          >
            bubble
          </div>
        </div>
        <div
          style="margin-top: 40px;"
        >
          <h3>
            代码示例
          </h3>
          <pre
            style="background: rgb(246, 248, 250); padding: 16px; border-radius: 6px; overflow: auto; font-size: 13px;"
          >
            // 自定义 beforeMessageRender 渲染函数
const customBeforeMessageRender = (props) =&gt; {
  const messageData = props.originData;
  return (
    &lt;div style={{
      padding: '8px 12px',
      background: '#f6ffed',
      borderRadius: '6px',
      marginBottom: '8px',
      fontSize: '12px',
      color: '#52c41a'
    }}&gt;
      🔍 模型: gpt-4
    &lt;/div&gt;
  );
};

// 自定义 afterMessageRender 渲染函数
const customAfterMessageRender = (props) =&gt; {
  const messageData = props.originData;
  return (
    &lt;div style={{
      padding: '8px 12px',
      background: '#fff7e6',
      borderRadius: '6px',
      marginTop: '8px',
      fontSize: '12px',
      color: '#fa8c16'
    }}&gt;
      📊 消息状态: 已完成
    &lt;/div&gt;
  );
};

// 使用配置
&lt;Bubble
  originData={messageData}
  bubbleRenderConfig={{
    beforeMessageRender: customBeforeMessageRender,
    afterMessageRender: customAfterMessageRender,
  }}
/&gt;
          </pre>
        </div>
        <div
          style="margin-top: 20px;"
        >
          <h3>
            功能说明
          </h3>
          <ul>
            <li>
              <strong>
                beforeMessageRender
              </strong>
              : 在消息内容前面添加自定义内容
            </li>
            <li>
              <strong>
                afterMessageRender
              </strong>
              : 在消息内容后面添加自定义内容
            </li>
            <li>
              <strong>
                参数
              </strong>
              : 两个函数都接收 
              <code>
                props
              </code>
               和 
              <code>
                defaultDom
              </code>
               参数
            </li>
            <li>
              <strong>
                返回值
              </strong>
              : 可以返回任何有效的 React 节点
            </li>
            <li>
              <strong>
                禁用
              </strong>
              : 设置为 
              <code>
                false
              </code>
               可以禁用对应的渲染
            </li>
            <li>
              <strong>
                适用性
              </strong>
              : 在所有消息类型中都生效（用户消息和 AI 消息）
            </li>
          </ul>
        </div>
        <div
          style="margin-top: 20px;"
        >
          <h3>
            与 beforeContentRender/afterContentRender 的区别
          </h3>
          <ul>
            <li>
              <strong>
                beforeMessageRender/afterMessageRender
              </strong>
              : 更新的 API，在所有消息类型中都生效
            </li>
            <li>
              <strong>
                beforeContentRender/afterContentRender
              </strong>
              : 较旧的 API，仅在左侧消息（AI 回复）中生效
            </li>
            <li>
              <strong>
                建议
              </strong>
              : 优先使用 
              <code>
                beforeMessageRender
              </code>
               和 
              <code>
                afterMessageRender
              </code>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</DocumentFragment>