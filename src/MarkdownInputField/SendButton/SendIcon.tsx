import { interpolate } from 'flubber';
import {
  animate,
  motion,
  MotionValue,
  useMotionValue,
  useTransform,
} from 'framer-motion';
import React, { memo, useEffect, useMemo } from 'react';

export const getIndex = (_: any, index: number) => index;

export function useFlubber(progress: MotionValue<number>, paths: string[]) {
  return useTransform(progress, paths.map(getIndex), paths, {
    mixer: (a, b) => interpolate(a, b, { maxSegmentLength: 0.1 }),
  });
}

export const IconPath: React.FC<{
  paths: [string, string];
  pathIndex: number;
}> = (props) => {
  const { pathIndex } = props;
  const progress = useMotionValue(pathIndex);
  const path = useFlubber(progress, props.paths || []);

  React.useEffect(() => {
    const animation = animate(progress, pathIndex, {
      duration: 0.6,
      ease: 'easeInOut',
    });

    return () => animation.stop();
  }, [pathIndex]);

  return path ? (
    <motion.path fillRule="evenodd" fill="currentColor" d={path}>
      <animate
        attributeName="fill"
        values="#F0F2F5;#83E4FF"
        dur="1s"
        repeatCount="1"
      />
    </motion.path>
  ) : null;
};

export const SendIcon = memo(
  (props: {
    hover?: boolean;
    disabled?: boolean;
    typing?: boolean;
    onInit?: () => void;
  }) => {
    const path = useMemo(() => {
      const x = 11,
        y = 11,
        r = 2;
      const size = 10;

      const leftX = x,
        leftY = y;

      let leftTop = `M ${leftX} ${leftY + 2 * r} Q ${leftX} ${leftY}, ${
        leftX + 2 * r
      } ${leftY}`;

      const rightTopX = x + size;
      const rightTopY = y;

      let rightTop =
        `L ${rightTopX - 2 * r} ${rightTopY}` +
        ` Q ${rightTopX} ${rightTopY},  ${rightTopX} ${rightTopY + 2 * r}`;

      const rightBottomX = x + size;
      const rightBottomY = y + size;

      let rightBottom =
        `L ${rightBottomX} ${rightBottomY - 2 * r}` +
        ` Q ${rightBottomX} ${rightBottomY}, ${rightBottomX - 2 * r} ${
          y + size
        } 
  `;

      const letBottomX = x;
      const letBottomY = y + size;

      let leftBottom =
        `L ${letBottomX + 2 * r} ${letBottomY}` +
        `Q ${letBottomX} ${letBottomY}  ${letBottomX} ${letBottomY - 2 * r}`;

      let end = `L ${x} ${y + 2 * r} Z`;
      return `${leftTop} ${rightTop} ${rightBottom} ${leftBottom} ${end}`;
    }, []);

    useEffect(() => {
      props.onInit?.();
    }, []);

    if (process.env.NODE_ENV === 'test') {
      return (
        <div
          style={{
            width: '1em',
            height: '1em',
            color: props.typing || props.hover ? '#fff' : undefined,
          }}
        />
      );
    }

    return (
      <div
        style={{
          width: '1em',
          height: '1em',
          color: props.typing || props.hover ? '#fff' : undefined,
        }}
      >
        <svg
          fill="none"
          version="1.1"
          width="1em"
          height="1em"
          viewBox="0 0 32 32"
        >
          <defs>
            <radialGradient
              cx="0"
              cy="0"
              r="1"
              gradientUnits="userSpaceOnUse"
              id="master_svg0_55_08882"
              gradientTransform="translate(2.341064453125 8.49853515625) rotate(26.38798296677497) scale(31.6552527525724 30.21162992383312)"
            >
              <stop offset="11.407196521759033%" stopColor="#7D19FF">
                <animate
                  attributeName="stop-color"
                  values="#7D19FF;#389FFF;#83E4FF;#7D19FF"
                  dur="3s"
                  repeatCount="indefinite"
                />
              </stop>
              <stop offset="72.30085134506226%" stopColor="#389FFF">
                <animate
                  attributeName="stop-color"
                  values="#389FFF;#7D19FF;#389FFF;#83E4FF;#389FFF"
                  dur="3s"
                  repeatCount="indefinite"
                />
              </stop>
              <stop offset="100%" stopColor="#83E4FF">
                <animate
                  attributeName="stop-color"
                  values="#83E4FF;#7D19FF;#389FFF;#83E4FF"
                  dur="3s"
                  repeatCount="indefinite"
                />
              </stop>
            </radialGradient>
          </defs>
          <g>
            <path
              style={{ transition: 'fill 0.3s' }}
              d="M32,16Q32,16.3928,31.9807,16.7851Q31.9615,17.1774,31.923,17.5683Q31.8845,17.9592,31.8268,18.3477Q31.7692,18.7362,31.6926,19.1214Q31.6159,19.5067,31.5205,19.8877Q31.4251,20.2687,31.311,20.6446Q31.197,21.0204,31.0647,21.3902Q30.9324,21.7601,30.7821,22.1229Q30.6318,22.4858,30.4638,22.8409Q30.2959,23.1959,30.1107,23.5423Q29.9256,23.8887,29.7237,24.2256Q29.5217,24.5625,29.3035,24.8891Q29.0853,25.2157,28.8513,25.5312Q28.6173,25.8467,28.3682,26.1503Q28.119,26.4539,27.8552,26.7449Q27.5914,27.036,27.3137,27.3137Q27.036,27.5914,26.7449,27.8552Q26.4539,28.119,26.1503,28.3682Q25.8467,28.6173,25.5312,28.8513Q25.2157,29.0853,24.8891,29.3035Q24.5625,29.5217,24.2256,29.7237Q23.8887,29.9256,23.5423,30.1107Q23.1959,30.2959,22.8409,30.4638Q22.4858,30.6318,22.1229,30.7821Q21.7601,30.9324,21.3902,31.0647Q21.0204,31.197,20.6446,31.311Q20.2687,31.4251,19.8877,31.5205Q19.5067,31.6159,19.1214,31.6926Q18.7362,31.7692,18.3477,31.8268Q17.9592,31.8845,17.5683,31.923Q17.1774,31.9615,16.7851,31.9807Q16.3928,32,16,32Q15.6072,32,15.2149,31.9807Q14.8226,31.9615,14.4317,31.923Q14.0408,31.8845,13.6523,31.8268Q13.2638,31.7692,12.8786,31.6926Q12.4933,31.6159,12.1123,31.5205Q11.7313,31.4251,11.3554,31.311Q10.9796,31.197,10.6098,31.0647Q10.2399,30.9324,9.87706,30.7821Q9.51418,30.6318,9.15912,30.4638Q8.80405,30.2959,8.45765,30.1107Q8.11125,29.9256,7.77436,29.7237Q7.43746,29.5217,7.11088,29.3035Q6.78429,29.0853,6.46881,28.8513Q6.15333,28.6173,5.84971,28.3682Q5.54609,28.119,5.25506,27.8552Q4.96403,27.5914,4.68629,27.3137Q4.40856,27.036,4.14478,26.7449Q3.88101,26.4539,3.63183,26.1503Q3.38266,25.8467,3.14868,25.5312Q2.9147,25.2157,2.69649,24.8891Q2.47827,24.5625,2.27634,24.2256Q2.07441,23.8887,1.88926,23.5423Q1.70411,23.1959,1.53617,22.8409Q1.36824,22.4858,1.21793,22.1229Q1.06762,21.7601,0.935295,21.3902Q0.802972,21.0204,0.688955,20.6446Q0.574937,20.2687,0.4795,19.8877Q0.384063,19.5067,0.307435,19.1214Q0.230808,18.7362,0.173176,18.3477Q0.115543,17.9592,0.0770444,17.5683Q0.0385454,17.1774,0.0192727,16.7851Q0,16.3928,0,16Q0,15.6072,0.0192727,15.2149Q0.0385454,14.8226,0.0770444,14.4317Q0.115543,14.0408,0.173176,13.6523Q0.230808,13.2638,0.307435,12.8786Q0.384063,12.4933,0.4795,12.1123Q0.574937,11.7313,0.688955,11.3554Q0.802972,10.9796,0.935295,10.6098Q1.06762,10.2399,1.21793,9.87706Q1.36824,9.51418,1.53617,9.15912Q1.70411,8.80405,1.88926,8.45765Q2.07441,8.11125,2.27634,7.77436Q2.47827,7.43746,2.69649,7.11088Q2.9147,6.78429,3.14868,6.46881Q3.38266,6.15333,3.63183,5.84971Q3.88101,5.54609,4.14478,5.25506Q4.40856,4.96403,4.68629,4.68629Q4.96403,4.40856,5.25506,4.14478Q5.54609,3.88101,5.84971,3.63183Q6.15333,3.38266,6.46881,3.14868Q6.78429,2.9147,7.11088,2.69649Q7.43746,2.47827,7.77436,2.27634Q8.11125,2.07441,8.45765,1.88926Q8.80405,1.70411,9.15912,1.53617Q9.51418,1.36824,9.87706,1.21793Q10.2399,1.06762,10.6098,0.935295Q10.9796,0.802972,11.3554,0.688955Q11.7313,0.574937,12.1123,0.4795Q12.4933,0.384063,12.8786,0.307435Q13.2638,0.230808,13.6523,0.173176Q14.0408,0.115543,14.4317,0.0770444Q14.8226,0.0385454,15.2149,0.0192727Q15.6072,0,16,0Q16.3928,0,16.7851,0.0192727Q17.1774,0.0385454,17.5683,0.0770444Q17.9592,0.115543,18.3477,0.173176Q18.7362,0.230808,19.1214,0.307435Q19.5067,0.384063,19.8877,0.4795Q20.2687,0.574937,20.6446,0.688955Q21.0204,0.802972,21.3902,0.935295Q21.7601,1.06762,22.1229,1.21793Q22.4858,1.36824,22.8409,1.53617Q23.1959,1.70411,23.5423,1.88926Q23.8887,2.07441,24.2256,2.27634Q24.5625,2.47827,24.8891,2.69649Q25.2157,2.9147,25.5312,3.14868Q25.8467,3.38266,26.1503,3.63183Q26.4539,3.88101,26.7449,4.14478Q27.036,4.40856,27.3137,4.68629Q27.5914,4.96403,27.8552,5.25506Q28.119,5.54609,28.3682,5.84971Q28.6173,6.15333,28.8513,6.46881Q29.0853,6.78429,29.3035,7.11088Q29.5217,7.43746,29.7237,7.77436Q29.9256,8.11125,30.1107,8.45765Q30.2959,8.80405,30.4638,9.15912Q30.6318,9.51418,30.7821,9.87706Q30.9324,10.2399,31.0647,10.6098Q31.197,10.9796,31.311,11.3554Q31.4251,11.7313,31.5205,12.1123Q31.6159,12.4933,31.6926,12.8786Q31.7692,13.2638,31.8268,13.6523Q31.8845,14.0408,31.923,14.4317Q31.9615,14.8226,31.9807,15.2149Q32,15.6072,32,16Z"
              fill={
                props.hover || props.typing
                  ? 'url(#master_svg0_55_08882)'
                  : '#F0F2F5'
              }
            />
            <IconPath
              pathIndex={props.typing ? 1 : 0}
              paths={[
                'M20.986,9.105482C21.554299999999998,8.888965,22.163800000000002,9.0110865,22.5759,9.422954C22.9893,9.835881,23.110500000000002,10.445,22.895,11.0135L18.74695,21.9456C18.50357,22.5875,17.911839999999998,23,17.23735,23L17.22423,23C16.59969,22.9951,16.08161,22.631500000000003,15.87188,22.0514L14.39296,17.958959999999998C14.33492,17.79439,14.20553,17.664920000000002,14.04101,17.60678L9.948603,16.127769999999998C9.368508,15.91845,9.00512941,15.39991,9.0000501502,14.775549999999999C8.99475925,14.09552,9.408508,13.49761,10.05442,13.25379L20.986,9.105482ZM14.8544,17.59411L19.144,13.30442C19.2242,13.22418,19.255499999999998,13.10727,19.226100000000002,12.99771C19.1968,12.88815,19.1112,12.80259,19.0016,12.77326C18.89203,12.74393,18.77514,12.77528,18.69495,12.8555L14.40552,17.14521C14.32299,17.224919999999997,14.2899,17.342950000000002,14.318950000000001,17.45395C14.347999999999999,17.56495,14.43468,17.65164,14.545670000000001,17.68069C14.656659999999999,17.70974,14.77469,17.67664,14.8544,17.59411Z',
                path,
              ]}
            />
          </g>
        </svg>
      </div>
    );
  },
);

export const StopIcon = memo(() => {
  return (
    <svg fill="none" version="1.1" width="1em" height="1em" viewBox="0 0 32 32">
      <defs>
        <radialGradient
          cx="0"
          cy="0"
          r="1"
          gradientUnits="userSpaceOnUse"
          id="master_svg0_55_08882"
          gradientTransform="translate(2.341064453125 8.49853515625) rotate(26.38798296677497) scale(31.6552527525724 30.21162992383312)"
        >
          <stop offset="11.407196521759033%" stopColor="#7D19FF" />
          <stop offset="72.30085134506226%" stopColor="#389FFF" />
          <stop offset="100%" stopColor="#83E4FF" />
        </radialGradient>
      </defs>
      <g>
        <g>
          <path
            d="M32,16Q32,16.3928,31.9807,16.7851Q31.9615,17.1774,31.923,17.5683Q31.8845,17.9592,31.8268,18.3477Q31.7692,18.7362,31.6926,19.1214Q31.6159,19.5067,31.5205,19.8877Q31.4251,20.2687,31.311,20.6446Q31.197,21.0204,31.0647,21.3902Q30.9324,21.7601,30.7821,22.1229Q30.6318,22.4858,30.4638,22.8409Q30.2959,23.1959,30.1107,23.5423Q29.9256,23.8887,29.7237,24.2256Q29.5217,24.5625,29.3035,24.8891Q29.0853,25.2157,28.8513,25.5312Q28.6173,25.8467,28.3682,26.1503Q28.119,26.4539,27.8552,26.7449Q27.5914,27.036,27.3137,27.3137Q27.036,27.5914,26.7449,27.8552Q26.4539,28.119,26.1503,28.3682Q25.8467,28.6173,25.5312,28.8513Q25.2157,29.0853,24.8891,29.3035Q24.5625,29.5217,24.2256,29.7237Q23.8887,29.9256,23.5423,30.1107Q23.1959,30.2959,22.8409,30.4638Q22.4858,30.6318,22.1229,30.7821Q21.7601,30.9324,21.3902,31.0647Q21.0204,31.197,20.6446,31.311Q20.2687,31.4251,19.8877,31.5205Q19.5067,31.6159,19.1214,31.6926Q18.7362,31.7692,18.3477,31.8268Q17.9592,31.8845,17.5683,31.923Q17.1774,31.9615,16.7851,31.9807Q16.3928,32,16,32Q15.6072,32,15.2149,31.9807Q14.8226,31.9615,14.4317,31.923Q14.0408,31.8845,13.6523,31.8268Q13.2638,31.7692,12.8786,31.6926Q12.4933,31.6159,12.1123,31.5205Q11.7313,31.4251,11.3554,31.311Q10.9796,31.197,10.6098,31.0647Q10.2399,30.9324,9.87706,30.7821Q9.51418,30.6318,9.15912,30.4638Q8.80405,30.2959,8.45765,30.1107Q8.11125,29.9256,7.77436,29.7237Q7.43746,29.5217,7.11088,29.3035Q6.78429,29.0853,6.46881,28.8513Q6.15333,28.6173,5.84971,28.3682Q5.54609,28.119,5.25506,27.8552Q4.96403,27.5914,4.68629,27.3137Q4.40856,27.036,4.14478,26.7449Q3.88101,26.4539,3.63183,26.1503Q3.38266,25.8467,3.14868,25.5312Q2.9147,25.2157,2.69649,24.8891Q2.47827,24.5625,2.27634,24.2256Q2.07441,23.8887,1.88926,23.5423Q1.70411,23.1959,1.53617,22.8409Q1.36824,22.4858,1.21793,22.1229Q1.06762,21.7601,0.935295,21.3902Q0.802972,21.0204,0.688955,20.6446Q0.574937,20.2687,0.4795,19.8877Q0.384063,19.5067,0.307435,19.1214Q0.230808,18.7362,0.173176,18.3477Q0.115543,17.9592,0.0770444,17.5683Q0.0385454,17.1774,0.0192727,16.7851Q0,16.3928,0,16Q0,15.6072,0.0192727,15.2149Q0.0385454,14.8226,0.0770444,14.4317Q0.115543,14.0408,0.173176,13.6523Q0.230808,13.2638,0.307435,12.8786Q0.384063,12.4933,0.4795,12.1123Q0.574937,11.7313,0.688955,11.3554Q0.802972,10.9796,0.935295,10.6098Q1.06762,10.2399,1.21793,9.87706Q1.36824,9.51418,1.53617,9.15912Q1.70411,8.80405,1.88926,8.45765Q2.07441,8.11125,2.27634,7.77436Q2.47827,7.43746,2.69649,7.11088Q2.9147,6.78429,3.14868,6.46881Q3.38266,6.15333,3.63183,5.84971Q3.88101,5.54609,4.14478,5.25506Q4.40856,4.96403,4.68629,4.68629Q4.96403,4.40856,5.25506,4.14478Q5.54609,3.88101,5.84971,3.63183Q6.15333,3.38266,6.46881,3.14868Q6.78429,2.9147,7.11088,2.69649Q7.43746,2.47827,7.77436,2.27634Q8.11125,2.07441,8.45765,1.88926Q8.80405,1.70411,9.15912,1.53617Q9.51418,1.36824,9.87706,1.21793Q10.2399,1.06762,10.6098,0.935295Q10.9796,0.802972,11.3554,0.688955Q11.7313,0.574937,12.1123,0.4795Q12.4933,0.384063,12.8786,0.307435Q13.2638,0.230808,13.6523,0.173176Q14.0408,0.115543,14.4317,0.0770444Q14.8226,0.0385454,15.2149,0.0192727Q15.6072,0,16,0Q16.3928,0,16.7851,0.0192727Q17.1774,0.0385454,17.5683,0.0770444Q17.9592,0.115543,18.3477,0.173176Q18.7362,0.230808,19.1214,0.307435Q19.5067,0.384063,19.8877,0.4795Q20.2687,0.574937,20.6446,0.688955Q21.0204,0.802972,21.3902,0.935295Q21.7601,1.06762,22.1229,1.21793Q22.4858,1.36824,22.8409,1.53617Q23.1959,1.70411,23.5423,1.88926Q23.8887,2.07441,24.2256,2.27634Q24.5625,2.47827,24.8891,2.69649Q25.2157,2.9147,25.5312,3.14868Q25.8467,3.38266,26.1503,3.63183Q26.4539,3.88101,26.7449,4.14478Q27.036,4.40856,27.3137,4.68629Q27.5914,4.96403,27.8552,5.25506Q28.119,5.54609,28.3682,5.84971Q28.6173,6.15333,28.8513,6.46881Q29.0853,6.78429,29.3035,7.11088Q29.5217,7.43746,29.7237,7.77436Q29.9256,8.11125,30.1107,8.45765Q30.2959,8.80405,30.4638,9.15912Q30.6318,9.51418,30.7821,9.87706Q30.9324,10.2399,31.0647,10.6098Q31.197,10.9796,31.311,11.3554Q31.4251,11.7313,31.5205,12.1123Q31.6159,12.4933,31.6926,12.8786Q31.7692,13.2638,31.8268,13.6523Q31.8845,14.0408,31.923,14.4317Q31.9615,14.8226,31.9807,15.2149Q32,15.6072,32,16Z"
            fill="url(#master_svg0_55_08882)"
          />
        </g>
        <g>
          <rect x="11" y="11" width="10" height="10" rx="2" fill="#FFFFFF" />
        </g>
      </g>
    </svg>
  );
});
